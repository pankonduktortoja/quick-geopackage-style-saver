# -*- coding: utf-8 -*-
"""
/***************************************************************************
 QuickGeopackageStyleSaverDockWidget
                                 A QGIS plugin
 Used to quickly save layer's style into geopackage with just one click.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2023-04-28
        git sha              : $Format:%H$
        copyright            : (C) 2023 by Bartosz Łęczycki
        email                : bartosz.leczycki98@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

from qgis.PyQt import QtGui, QtWidgets, uic
from qgis.PyQt.QtCore import pyqtSignal
from qgis.core import *
from qgis.utils import *
import os.path

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'quick_geopackage_style_saver_dockwidget_base.ui'))


class QuickGeopackageStyleSaverDockWidget(QtWidgets.QDockWidget, FORM_CLASS):

    closingPlugin = pyqtSignal()

    def __init__(self, parent=None):
        """Constructor."""
        super(QuickGeopackageStyleSaverDockWidget, self).__init__(parent)
        self.setupUi(self)
        self.pbActive.clicked.connect(self.runActive)
        #self.pbAll.clicked.connect(self.runAll)

    def runActive(self):
        layer = iface.activeLayer()
        if layer.type() == QgsMapLayerType.VectorLayer:
            layer_name = layer.name()
            style = """
            <qgis>
                <renderer-v2 type="RuleRenderer">
                    <rules/>
                </renderer-v2>
                <labeling/>
            </qgis>
            """
            layer.saveStyleToDatabase(layer_name, "My favorite style", True, "", QgsMapLayer.AllStyleCategories)
            layer.triggerRepaint()
        else:
            iface.messageBar().pushCritical("Error", "The layer is not a vector layer")

    def closeEvent(self, event):
        self.closingPlugin.emit()
        event.accept()
